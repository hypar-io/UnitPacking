// This code was generated by Hypar.
// Edits to this code will be overwritten the next time you run 'hypar init'.
// DO NOT EDIT THIS FILE.

using Elements;
using Elements.GeoJSON;
using Elements.Geometry;
using Elements.Geometry.Solids;
using Elements.Validators;
using Elements.Serialization.JSON;
using Hypar.Functions;
using Hypar.Functions.Execution;
using Hypar.Functions.Execution.AWS;
using Hypar.Model;
using System;
using System.Collections.Generic;
using System.Linq;
using Line = Elements.Geometry.Line;
using Polygon = Elements.Geometry.Polygon;

namespace UnitPacking
{
    #pragma warning disable // Disable all warnings

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.21.0 (Newtonsoft.Json v13.0.0.0)")]
    
    public  class UnitPackingInputs : ArgsBase
    
    {
        [Newtonsoft.Json.JsonConstructor]
        
        public UnitPackingInputs(IList<DummyUnit> @unitDefinitions, Line @buildingSegment, double @lengthTolerance, int @selectedSolution, Dictionary<string, string> modelInputKeys, string gltfKey, string elementsKey, string ifcKey):
        base(modelInputKeys, gltfKey, elementsKey, ifcKey)
        {
            var validator = Validator.Instance.GetFirstValidatorForType<UnitPackingInputs>();
            if(validator != null)
            {
                validator.PreConstruct(new object[]{ @unitDefinitions, @buildingSegment, @lengthTolerance, @selectedSolution});
            }
        
            this.UnitDefinitions = @unitDefinitions;
            this.BuildingSegment = @buildingSegment;
            this.LengthTolerance = @lengthTolerance;
            this.SelectedSolution = @selectedSolution;
        
            if(validator != null)
            {
                validator.PostConstruct(this);
            }
        }
    
        [Newtonsoft.Json.JsonProperty("Unit Definitions", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IList<DummyUnit> UnitDefinitions { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Building Segment", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Line BuildingSegment { get; set; }
    
        /// <summary>How short the packed units can be from the building length</summary>
        [Newtonsoft.Json.JsonProperty("Length Tolerance", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0.125D, 6D)]
        public double LengthTolerance { get; set; } = 1D;
    
        [Newtonsoft.Json.JsonProperty("Selected Solution", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(1, int.MaxValue)]
        public int SelectedSolution { get; set; } = 1;
    
    }
}